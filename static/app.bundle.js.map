{"version":3,"sources":["webpack:///./src/App.jsx","webpack:///./src/IssueList.jsx","webpack:///./src/IssueAdd.jsx","webpack:///./src/IssueFilter.jsx"],"names":["contentNode","document","getElementById","render","module","hot","accept","IssueList","state","issues","createIssue","bind","loadData","fetch","then","response","ok","json","console","log","data","_metadata","total_count","records","forEach","issue","created","Date","completionDate","setState","alert","error","message","catch","err","newIssue","method","headers","body","JSON","stringify","updatedIssue","newIssues","concat","Component","IssueRow","props","_id","status","owner","toDateString","effort","title","IssueTable","issueRows","map","IssueAdd","handleSubmit","e","preventDefault","form","forms","issueAdd","value","IssueFilter"],"mappings":"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","file":"app.bundle.js","sourcesContent":["import IssueList from './IssueList.jsx'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst contentNode = document.getElementById('contents')\nReactDOM.render(<IssueList />, contentNode)\n\nif(module.hot){\n  module.hot.accept()\n}\n\n\n// WEBPACK FOOTER //\n// ./src/App.jsx","import React from 'react'\nimport 'whatwg-fetch'\nimport IssueAdd from './IssueAdd.jsx'\nimport IssueFilter from './IssueFilter.jsx'\n\nexport default class IssueList extends React.Component {\n  constructor () {\n    super()\n    this.state = {issues: []}\n\n    this.createIssue = this.createIssue.bind(this)\n  }\n\n  componentDidMount () {\n    this.loadData()\n  }\n\n  loadData () {\n    fetch('/api/issues').then(response => {\n      if (response.ok) {\n        response.json().then(data => {\n          console.log('Total count of records:', data._metadata.total_count)\n          data.records.forEach(issue => {\n            issue.created = new Date(issue.created)\n            if (issue.completionDate) {\n              issue.completionDate = new Date(issue.completionDate)\n            }\n          })\n\n          this.setState({issues: data.records})\n        })\n      } else {\n        response.json().then(error => {\n          alert('Failed to fetch issues:' + error.message)\n        })\n      }\n    }).catch(err => {\n      alert('Error in fetching data from server:' + err)\n    })\n  }\n\n  createIssue (newIssue) {\n    fetch('/api/issues', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(newIssue)\n    }).then(response => {\n      if (response.ok) {\n        response.json().then(updatedIssue => {\n          updatedIssue.created = new Date(updatedIssue.created)\n          if (updatedIssue.completionDate) {\n            updatedIssue.completionDate = new Date(updatedIssue.completionDate)\n          }\n          const newIssues = this.state.issues.concat(updatedIssue)\n          this.setState({issues: newIssues})\n        })\n      } else {\n        response.json().then(error => {\n          alert('Failed to add issue: ' + error.message)\n        })\n      }\n    }).catch(err => {\n      console.log('Error in sending data to server: ' + err.message)\n      alert('Error in sending data to server: ' + err.message)\n    })\n  }\n\n  render () {\n    return (\n      <div>\n        <h1>Issue Tracker</h1>\n        <IssueFilter />\n        <hr />\n        <IssueTable issues={this.state.issues} />\n        <hr />\n        <IssueAdd createIssue={this.createIssue} />\n      </div>\n    )\n  }\n}\n\nconst IssueRow = (props) => (\n  <tr>\n    <td>{props.issue._id}</td>\n    <td>{props.issue.status}</td>\n    <td>{props.issue.owner}</td>\n    <td>{props.issue.created.toDateString()}</td>\n    <td>{props.issue.effort}</td>\n    <td>{props.issue.completionDate ? props.issue.completionDate.toDateString() : ''}</td>\n    <td>{props.issue.title}</td>\n  </tr>\n)\n\nfunction IssueTable (props) {\n\n  const issueRows = props.issues.map(issue => <IssueRow key={issue._id} issue={issue} />)\n\n  return (\n    <table className='bordered-table'>\n      <thead>\n        <tr>\n          <th>Id</th>\n          <th>Status</th>\n          <th>Owner</th>\n          <th>Created</th>\n          <th>Effort</th>\n          <th>Completion Date</th>\n          <th>Title</th>\n        </tr>\n      </thead>\n      <tbody>\n        {issueRows}\n      </tbody>\n    </table>\n  )\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/IssueList.jsx","import React from 'react'\n\nexport default class IssueAdd extends React.Component {\n  constructor () {\n    super()\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleSubmit (e) {\n    e.preventDefault()\n    let form = document.forms.issueAdd\n    this.props.createIssue({\n      owner: form.owner.value,\n      title: form.title.value,\n      status: 'New',\n      created: new Date()\n    })\n    // clear the form for the next input\n    form.owner.value = ''\n    form.title.value = ''\n  }\n\n  render () {\n    return (\n      <div>\n        <form name='issueAdd' onSubmit={this.handleSubmit}>\n          <input type='text' name='owner' placeholder='Owner' />\n          <input type='text' name='title' placeholder='Title' />\n          <button>Add</button>\n        </form>\n      </div>\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/IssueAdd.jsx","import React from 'react'\n\nexport default class IssueFilter extends React.Component {\n  render () {\n    return (\n      <div>THIS is a placeholder for the Issue Filter.</div>\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/IssueFilter.jsx"],"sourceRoot":""}